(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{417:function(t,e,l){"use strict";l.r(e);var a=l(42),o=Object(a.a)({},(function(){var t=this,e=t.$createElement,l=t._self._c||e;return l("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[l("h1",{attrs:{id:"volatile-实现原理"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#volatile-实现原理"}},[t._v("#")]),t._v(" volatile 实现原理")]),t._v(" "),l("ul",[l("li",[t._v("在 JVM 底层 "),l("code",[t._v("volatile")]),t._v(" 是采用“内存屏障”来实现的")]),t._v(" "),l("li",[t._v("缓存一致性协议（MESI协议）它确保每个缓存中使用的共享变量的副本是一致的。其核心思想如下：当某个 CPU 在写数据时，如果发现操作的变量是共享变量，则会通知其他 CPU 告知该变量的缓存行是无效的，因此其他 CPU 在读取该变量时，发现其无效会重新从主存中加载数据")])])])}),[],!1,null,null,null);e.default=o.exports}}]);