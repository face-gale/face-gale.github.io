(window.webpackJsonp=window.webpackJsonp||[]).push([[252],{599:function(n,e,a){"use strict";a.r(e);var s=a(42),t=Object(s.a)({},(function(){var n=this,e=n.$createElement,a=n._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("h1",{attrs:{id:"kubernetes-configmap"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#kubernetes-configmap"}},[n._v("#")]),n._v(" Kubernetes ConfigMap")]),n._v(" "),a("h2",{attrs:{id:"概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[n._v("#")]),n._v(" 概述")]),n._v(" "),a("p",[n._v("ConfigMap 是用来存储配置文件的 Kubernetes 资源对象，所有的配置内容都存储在 etcd 中。它可以被用来保存单个属性，也可以用来保存整个配置文件或者 JSON 二进制对象。ConfigMap API 资源提供了将配置数据注入容器的方式，同时保证该机制对容器来说是透明的。配置应该从 Image 内容中解耦，以此来保持容器化应用程序的可移植性。")]),n._v(" "),a("h2",{attrs:{id:"使用-configmap-配置-mysql"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-configmap-配置-mysql"}},[n._v("#")]),n._v(" 使用 ConfigMap 配置 MySQL")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: mysql-myshop-config\ndata:\n  # 这里是键值对数据\n  mysqld.cnf: |\n    [client]\n    port=3306\n    [mysql]\n    no-auto-rehash\n    [mysqld]\n    skip-host-cache\n    skip-name-resolve\n    default-authentication-plugin=mysql_native_password\n    character-set-server=utf8mb4\n    collation-server=utf8mb4_general_ci\n    explicit_defaults_for_timestamp=true\n    lower_case_table_names=1\n---\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: mysql-myshop\nspec:\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        name: mysql-myshop\n    spec:\n      containers:\n        - name: mysql-myshop\n          image: mysql:8.0.16\n          imagePullPolicy: IfNotPresent\n          ports:\n            - containerPort: 3306\n          env:\n            - name: MYSQL_ROOT_PASSWORD\n              value: "123456"\n          volumeMounts:\n            # 以数据卷的形式挂载 MySQL 配置文件目录\n            - name: cm-vol-myshop\n              mountPath: /etc/mysql/conf.d\n            - name: nfs-vol-myshop\n              mountPath: /var/lib/mysql\n      volumes:\n        # 将 ConfigMap 中的内容以文件形式挂载进数据卷\n        - name: cm-vol-myshop\n          configMap:\n            name: mysql-myshop-config\n            items:\n                # ConfigMap 中的 Key\n              - key: mysqld.cnf\n                # ConfigMap Key 匹配的 Value 写入名为 mysqld.cnf 的文件中\n                path: mysqld.cnf\n        - name: nfs-vol-myshop\n          persistentVolumeClaim:\n            claimName: nfs-pvc-mysql-myshop\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: mysql-myshop\nspec:\n  ports:\n    - port: 3306\n      targetPort: 3306\n  type: LoadBalancer\n  selector:\n    name: mysql-myshop\n')])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("# 查看 ConfigMap\nkubectl get cm\nkubectl describe cm <ConfigMap Name>\n")])])])])}),[],!1,null,null,null);e.default=t.exports}}]);