(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{387:function(t,a,s){"use strict";s.r(a);var n=s(42),r=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"ecmascript-基本对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ecmascript-基本对象"}},[t._v("#")]),t._v(" ECMAScript(基本对象)")]),t._v(" "),s("h2",{attrs:{id:"function"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#function"}},[t._v("#")]),t._v(" Function")]),t._v(" "),s("p",[t._v("函数(方法)对象有三种创建方式")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" fun "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("形式参数列表"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("方法体"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//忘掉吧")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("方法名称")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("形式参数列表")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        方法体\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("方法名")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("形式参数列表")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        方法体\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("特点：")]),t._v(" "),s("ol",[s("li",[t._v("方法定义时形参的类型不用写,返回值类型也不写。")]),t._v(" "),s("li",[t._v("方法是一个对象，如果定义名称相同的方法，会覆盖")]),t._v(" "),s("li",[t._v("在JS中，方法的调用只与方法的名称有关，和参数列表无关")]),t._v(" "),s("li",[t._v("在方法声明中有一个隐藏的内置对象（数组），arguments,封装所有的实际参数")])])]),t._v(" "),s("h2",{attrs:{id:"array-数组对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#array-数组对象"}},[t._v("#")]),t._v(" Array:数组对象")]),t._v(" "),s("p",[t._v("创建")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("元素列表"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("默认长度"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("元素列表"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("方法")]),t._v(" "),s("ul",[s("li",[t._v("join(参数):将数组中的元素按照指定的分隔符拼接为字符串")]),t._v(" "),s("li",[t._v("push()\t向数组的末尾添加一个或更多元素，并返回新的长度。")])])]),t._v(" "),s("blockquote",[s("p",[t._v("JS中，数组元素的类型和长度是可变的。")])]),t._v(" "),s("h2",{attrs:{id:"boolean"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#boolean"}},[t._v("#")]),t._v(" Boolean")]),t._v(" "),s("h2",{attrs:{id:"date：日期对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#date：日期对象"}},[t._v("#")]),t._v(" Date：日期对象")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" date "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("方法：")]),t._v(" "),s("ul",[s("li",[t._v("toLocaleString()：返回当前date对象对应的时间本地字符串格式")]),t._v(" "),s("li",[t._v("getTime():获取毫秒值。返回当前如期对象描述的时间到1970年1月1日零点的毫秒值差")])])]),t._v(" "),s("h2",{attrs:{id:"math：数学对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#math：数学对象"}},[t._v("#")]),t._v(" Math：数学对象")]),t._v(" "),s("p",[t._v("Math对象不用创建，可以直接使用。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v(" Math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("方法名")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("方法")]),t._v(" "),s("ul",[s("li",[t._v("random():返回 0 ~ 1 之间的随机数。 含0不含1")]),t._v(" "),s("li",[t._v("ceil(x)：对数进行上舍入。")]),t._v(" "),s("li",[t._v("floor(x)：对数进行下舍入。")]),t._v(" "),s("li",[t._v("round(x)：把数四舍五入为最接近的整数。")])])]),t._v(" "),s("h2",{attrs:{id:"number"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#number"}},[t._v("#")]),t._v(" Number")]),t._v(" "),s("h2",{attrs:{id:"string"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#string"}},[t._v("#")]),t._v(" String")]),t._v(" "),s("h2",{attrs:{id:"regexp：正则表达式对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#regexp：正则表达式对象"}},[t._v("#")]),t._v(" RegExp：正则表达式对象")]),t._v(" "),s("ol",[s("li",[t._v("正则表达式：定义字符串的组成规则。\n"),s("ol",[s("li",[t._v("单个字符:[]\n如： [a] [ab] [a-zA-Z0-9_]\n"),s("ul",[s("li",[t._v("特殊符号代表特殊含义的单个字符:\n\\d:单个数字字符 [0-9]\n\\w:单个单词字符[a-zA-Z0-9_]")])])]),t._v(" "),s("li",[t._v("量词符号：\n?：表示出现0次或1次\n*：表示出现0次或多次\n+：出现1次或多次\n{m,n}:表示 m<= 数量 <= n\n* m如果缺省： {,n}:最多n次\n* n如果缺省：{m,} 最少m次")]),t._v(" "),s("li",[t._v("开始结束符号\n"),s("ul",[s("li",[t._v("^:开始")]),t._v(" "),s("li",[t._v("$:结束")])])])])]),t._v(" "),s("li",[t._v("正则对象：\n"),s("ol",[s("li",[t._v("创建\n"),s("ol",[s("li",[t._v('var reg = new RegExp("正则表达式");')]),t._v(" "),s("li",[t._v("var reg = /正则表达式/;")])])]),t._v(" "),s("li",[t._v("方法\n"),s("ol",[s("li",[t._v("test(参数):验证指定的字符串是否符合正则定义的规范")])])])])])]),t._v(" "),s("h2",{attrs:{id:"global"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#global"}},[t._v("#")]),t._v(" Global")]),t._v(" "),s("p",[t._v("全局对象，这个Global中封装的方法不需要对象就可以直接调用。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("方法名")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("::: tip方法：")]),t._v(" "),s("ul",[s("li",[t._v("encodeURI():url编码")]),t._v(" "),s("li",[t._v("decodeURI():url解码")]),t._v(" "),s("li",[t._v("encodeURIComponent():url编码,编码的字符更多")]),t._v(" "),s("li",[t._v("decodeURIComponent():url解码")]),t._v(" "),s("li",[t._v("parseInt():将字符串转为数字,逐一判断每一个字符是否是数字，直到不是数字为止，将前边数字部分转为number")]),t._v(" "),s("li",[t._v("isNaN():判断一个值是否是NaN,NaN六亲不认，连自己都不认。NaN参与的==比较全部问false")]),t._v(" "),s("li",[t._v("eval():讲 JavaScript 字符串，并把它作为脚本代码来执行。\n:::")])])])}),[],!1,null,null,null);a.default=r.exports}}]);