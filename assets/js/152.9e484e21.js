(window.webpackJsonp=window.webpackJsonp||[]).push([[152],{499:function(t,v,_){"use strict";_.r(v);var e=_(42),n=Object(e.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"如何自定义注解实现功能"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#如何自定义注解实现功能"}},[t._v("#")]),t._v(" 如何自定义注解实现功能")]),t._v(" "),_("ol",[_("li",[t._v("创建自定义注解和创建一个接口相似，但是注解的 "),_("code",[t._v("interface")]),t._v(" 关键字需要以 "),_("code",[t._v("@")]),t._v(" 符号开头。")]),t._v(" "),_("li",[t._v("注解方法不能带有参数；")]),t._v(" "),_("li",[t._v("注解方法返回值类型限定为："),_("code",[t._v("基本类型")]),t._v("、"),_("code",[t._v("String")]),t._v("、"),_("code",[t._v("Enums")]),t._v("、"),_("code",[t._v("Annotation")]),t._v(" 或者是这些类型的"),_("strong",[t._v("数组")]),t._v("；")]),t._v(" "),_("li",[t._v("注解方法可以有默认值；")]),t._v(" "),_("li",[t._v("注解本身能够包含元注解，元注解被用来注解其它注解。")])])])}),[],!1,null,null,null);v.default=n.exports}}]);